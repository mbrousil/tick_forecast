coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
View(tick_data)
library(ggrepel)
tick_sf %>%
select(plotID, siteID)
tick_sf %>%
select(plotID, siteID) %>%
distinct()
ggplot() +
geom_sf(data = state_shapes) +
geom_sf(data = tick_sf %>%
select(plotID, siteID) %>%
distinct(),
color = "red") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
tick_sf %>%
select(plotID, siteID) %>%
distinct()
tick_sf %>%
select(plotID, siteID) %>%
distinct() %>%
View()
devtools::install_github("yutannihilation/ggsflabel")
library(ggsflabel)
tick_sf %>%
select(plotID, siteID) %>%
distinct()
ggplot(data = tick_sf %>%
select(plotID, siteID) %>%
distinct()) +
geom_sf(data = state_shapes) +
geom_sf(color = "red") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
geom_label_repel(
aes(label = plotID, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0
) +
theme_bw()
ggplot(data = tick_sf %>%
select(plotID, siteID) %>%
distinct()) +
geom_sf(data = state_shapes) +
geom_sf(color = "red") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
geom_text_repel(
aes(label = plotID, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0
) +
theme_bw()
ggplot(data = tick_sf %>%
select(plotID, siteID) %>%
distinct()) +
geom_sf(data = state_shapes) +
geom_sf(color = "red") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
tick_sf %>%
select(plotID, siteID) %>%
distinct()
tick_sf %>%
select(plotID, siteID) %>%
distinct() %>%
View()
tribble(
~label, ~lat, ~long,
"BLAN: 2 plots", 39.086224, -77.972736,
"KONZ: 1 plot", 39.103714, -96.597835,
"ORNL: 6 plots", 35.983081, -84.211655,
"SCBI: 2 plots", 38.893863, -78.1427,
"SERC: 5 plots", 38.868184, -76.535301,
"TALL: 3 plots", 32.976366, -87.432192,
"UKFS: 3 plots", 39.037238, -95.19863
)
plot_counts <- tribble(
~label, ~lat, ~long,
"BLAN: 2 plots", 39.086224, -77.972736,
"KONZ: 1 plot", 39.103714, -96.597835,
"ORNL: 6 plots", 35.983081, -84.211655,
"SCBI: 2 plots", 38.893863, -78.1427,
"SERC: 5 plots", 38.868184, -76.535301,
"TALL: 3 plots", 32.976366, -87.432192,
"UKFS: 3 plots", 39.037238, -95.19863
) %>%
st_as_sf(coords = c("long", "lat")) %>%
st_set_crs(st_crs(state_shapes))
plot_counts
ggplot() +
geom_sf(data = state_shapes) +
geom_text_repel(
data = plot_counts,
aes(text = label, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0
) +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
ggplot() +
geom_sf(data = state_shapes) +
geom_text_repel(
data = plot_counts,
aes(label = label, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0
) +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
ggplot() +
geom_sf(data = state_shapes) +
geom_text_repel(
data = plot_counts,
aes(label = label, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
color = "red") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
ggplot() +
geom_sf(data = state_shapes) +
geom_sf(data = plot_counts, color = "black") +
geom_text_repel(
data = plot_counts,
aes(label = label, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
color = "red") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
ggplot() +
geom_sf(data = state_shapes) +
geom_sf(data = plot_counts, color = "red") +
geom_text_repel(
data = plot_counts,
aes(label = label, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
color = "black") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
?geom_text_repel
ggplot() +
geom_sf(data = state_shapes) +
geom_sf(data = plot_counts, color = "red") +
geom_text_repel(
data = plot_counts,
aes(label = label, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
label.padding = 0.5,
color = "black") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
ggplot() +
geom_sf(data = state_shapes) +
geom_sf(data = plot_counts, color = "red") +
geom_text_repel(
data = plot_counts,
aes(label = label, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
label.padding = 1.5,
color = "black") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
ggplot() +
geom_sf(data = state_shapes) +
geom_sf(data = plot_counts, color = "red") +
geom_text_repel(
data = plot_counts,
aes(label = label, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
nudge_y = 1,
color = "black") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
ggplot() +
geom_sf(data = state_shapes) +
geom_sf(data = plot_counts, color = "red") +
geom_text_repel(
data = plot_counts,
aes(label = label, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
nudge_y = 1,
nudge_x = -1
color = "black") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
ggplot() +
geom_sf(data = state_shapes) +
geom_sf(data = plot_counts, color = "red") +
geom_text_repel(
data = plot_counts,
aes(label = label, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
nudge_y = 1,
nudge_x = -1,
color = "black") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
ggplot() +
geom_sf(data = state_shapes, alpha = 0.5) +
geom_sf(data = plot_counts, color = "red") +
geom_text_repel(
data = plot_counts,
aes(label = label, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
nudge_y = 1,
nudge_x = -1,
color = "black") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
ggplot() +
geom_sf(data = state_shapes, alpha = 0.5) +
geom_sf(data = plot_counts, color = "red") +
geom_text_repel(
data = plot_counts,
aes(label = label, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
nudge_y = 1,
nudge_x = 2,
color = "black") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
ggplot() +
geom_sf(data = state_shapes, alpha = 0.5) +
geom_sf(data = plot_counts, color = "red") +
geom_text_repel(
data = plot_counts,
aes(label = label, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
nudge_y = -1,
nudge_x = 2,
color = "black") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
ggplot() +
geom_sf(data = state_shapes, alpha = 0.5) +
geom_sf(data = plot_counts, color = "red") +
geom_text_repel(
data = plot_counts,
aes(label = label, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
nudge_y = 2,
nudge_x = 2,
color = "black") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
ggplot() +
geom_sf(data = state_shapes, alpha = 0.5) +
geom_sf(data = plot_counts, color = "red") +
geom_label_repel(
data = plot_counts,
aes(label = label, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
nudge_y = 2,
nudge_x = 2,
color = "black") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
ggplot() +
geom_sf(data = state_shapes) +
geom_sf(data = plot_counts, color = "red", size = 2) +
geom_label_repel(
data = plot_counts,
aes(label = label, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
nudge_y = 2,
nudge_x = 2,
color = "black") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
ggplot() +
geom_sf(data = state_shapes) +
geom_sf(data = plot_counts, color = "red", size = 2, pch = 21) +
geom_label_repel(
data = plot_counts,
aes(label = label, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
nudge_y = 2,
nudge_x = 2,
color = "black") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
ggplot() +
geom_sf(data = state_shapes) +
geom_sf(data = plot_counts, color = "black", fill = "red", size = 2, pch = 21) +
geom_label_repel(
data = plot_counts,
aes(label = label, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
nudge_y = 2,
nudge_x = 2,
color = "black") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
theme_bw()
ggplot() +
geom_sf(data = state_shapes) +
geom_sf(data = plot_counts, color = "black", fill = "red", size = 2, pch = 21) +
geom_label_repel(
data = plot_counts,
aes(label = label, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
nudge_y = 2,
nudge_x = 2,
color = "black") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
xlab("Longitude") +
ylab("Latitude") +
theme_bw()
library(tidyverse)
library(sf)
library(rnaturalearth)
library(ggrepel)
state_shapes <- ne_states(country = "United States of America",
returnclass = "sf")
# https://projects.ecoforecast.org/neon4cast-docs/theme-tick-populations.html
tick_data <- read_csv("https://data.ecoforecast.org/targets/ticks/ticks-targets.csv.gz",
guess_max = 1e6)
head(tick_data)
tick_sf <- st_as_sf(tick_data,
coords = c("decimalLongitude","decimalLatitude")) %>%
st_set_crs(st_crs(state_shapes))
tick_sf
tick_data
tick_data %>%
select(siteID, decimalLatitude, decimalLongitude) %>%
distinct()
tick_data %>%
select(siteID, decimalLatitude, decimalLongitude) %>%
distinct() %>%
View()
tick_data %>%
select(siteID, decimalLatitude, decimalLongitude) %>%
distinct() %>%
filter(siteID %in% c("KONZ", "UKFS"))
library(riem)
tick_sf
tick_data %>%
filter(siteID == "KONZ")
tick_data %>%
filter(siteID == "KONZ") %>%
summary()
# KONZ
riem_measures(station = "KS4972", date_start = "2015-01-01", date_end = "2020-01-01")
# KONZ
riem_measures(station = "KS2827", date_start = "2015-01-01", date_end = "2020-01-01")
?riem_measures
# KONZ
riem_measures(station = "MHK", date_start = "2015-01-01", date_end = "2020-01-01")
# Locations in KS
tick_data %>%
select(siteID, decimalLatitude, decimalLongitude) %>%
distinct() %>%
filter(siteID %in% c("KONZ", "UKFS"))
tick_data %>%
filter(siteID == "UKFS") %>%
summary()
# UKFS, distance: ~5.4 mi
riem_measures(station = "LWC", date_start = "2015-01-01", date_end = "2020-01-01")
# Locations in AL
tick_data %>%
select(siteID, decimalLatitude, decimalLongitude) %>%
distinct() %>%
filter(siteID %in% c("TALL"))
# Locations in KS
tick_data %>%
select(siteID, decimalLatitude, decimalLongitude) %>%
distinct() %>%
filter(siteID %in% c("KONZ", "UKFS"))
tick_data %>%
filter(siteID == "KONZ") %>%
summary()
# TALL, distance: ~5.4 mi
riem_measures(station = "TCL", date_start = "2015-01-01", date_end = "2020-01-01")
# Locations in AL
tick_data %>%
select(siteID, decimalLatitude, decimalLongitude) %>%
distinct() %>%
filter(siteID %in% c("TALL"))
# Locations in AL
tick_data %>%
select(siteID, decimalLatitude, decimalLongitude) %>%
distinct() %>%
filter(siteID %in% c("ORNL"))
# ORNL, distance: ~21.5 mi
riem_measures(station = "OQT", date_start = "2015-01-01", date_end = "2020-01-01")
tick_data %>%
filter(siteID == "ORNL") %>%
summary()
# ORNL, distance: ~21.5 mi
riem_measures(station = "OQT", date_start = "2014-01-01", date_end = "2020-01-01")
# Locations in TN
tick_data %>%
select(siteID, decimalLatitude, decimalLongitude) %>%
distinct() %>%
filter(siteID %in% c("SCBI"))
# SCBI, distance: ~
riem_measures(station = "FRR", date_start = "2014-01-01", date_end = "2020-01-01")
tick_data %>%
filter(siteID == "SCBI") %>%
summary()
# distance:
riem_measures(station = "OKV", date_start = "2014-01-01", date_end = "2020-01-01")
# Locations in VA
tick_data %>%
select(siteID, decimalLatitude, decimalLongitude) %>%
distinct() %>%
filter(siteID %in% c("BLAN", "SCBI"))
# Locations in TN
tick_data %>%
select(siteID, decimalLatitude, decimalLongitude) %>%
distinct() %>%
filter(siteID %in% c("SERC"))
# ORNL, distance: ~21.5 mi
riem_measures(station = "NAK", date_start = "2014-01-01", date_end = "2020-01-01")
tick_data %>%
filter(siteID == "SERC") %>%
summary()
# ORNL, distance: ~21.5 mi
riem_measures(station = "NAK", date_start = "2015-01-01", date_end = "2020-01-01")
library(tidyverse)
library(sf)
library(rnaturalearth)
library(ggrepel)
library(riem)
# Load data ---------------------------------------------------------------
# State polygons in sf format
state_shapes <- ne_states(country = "United States of America",
returnclass = "sf")
# Tick data
# https://projects.ecoforecast.org/neon4cast-docs/theme-tick-populations.html
tick_data <- read_csv("https://data.ecoforecast.org/targets/ticks/ticks-targets.csv.gz",
guess_max = 1e6)
# Preview the data
head(tick_data)
# Convert tick data to spatial format
tick_sf <- st_as_sf(tick_data,
coords = c("decimalLongitude", "decimalLatitude")) %>%
st_set_crs(st_crs(state_shapes))
# Create reference map of sites -------------------------------------------
# Manually summarize the locations to a single point each
plot_counts <- tribble(
~label, ~lat, ~long,
"BLAN: 2 plots", 39.086224, -77.972736,
"KONZ: 1 plot", 39.103714, -96.597835,
"ORNL: 6 plots", 35.983081, -84.211655,
"SCBI: 2 plots", 38.893863, -78.1427,
"SERC: 5 plots", 38.868184, -76.535301,
"TALL: 3 plots", 32.976366, -87.432192,
"UKFS: 3 plots", 39.037238, -95.19863
) %>%
st_as_sf(coords = c("long", "lat")) %>%
st_set_crs(st_crs(state_shapes))
# Create map
site_map <- ggplot() +
geom_sf(data = state_shapes) +
geom_sf(data = plot_counts, color = "black", fill = "red", size = 2, pch = 21) +
geom_label_repel(
data = plot_counts,
aes(label = label, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
nudge_y = 2,
nudge_x = 2,
color = "black") +
coord_sf(xlim = c(-100, -65), ylim = c(30, 50)) +
xlab("Longitude") +
ylab("Latitude") +
theme_bw()
site_map
ggsave(filename = "figures/site_overview_map.png", plot = site_map,
device = "png", width = 5, height = 4, units = "in")
ggsave(filename = "figures/site_overview_map.png", plot = site_map,
device = "png", width = 6, height = 4, units = "in")
library(tidyverse)
library(sf)
library(rnaturalearth)
library(ggrepel)
library(riem)
# Load data ---------------------------------------------------------------
# State polygons in sf format
state_shapes <- ne_states(country = "United States of America",
returnclass = "sf")
# Tick data
# https://projects.ecoforecast.org/neon4cast-docs/theme-tick-populations.html
tick_data <- read_csv("https://data.ecoforecast.org/targets/ticks/ticks-targets.csv.gz",
guess_max = 1e6)
VIew(tick_data)
View(tick_data)
tick_data
tick_data %>%
summarize()
tick_data %>%
summary()
?rnaturalearth
?riem
?riem::riem_measures()
