by = c("site_id", "year", "mmwr_week")) %>%
ggplot() +
geom_point(aes(x = min_air_vpd, y = min_vpd_mix)) +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(vars(site_id)) +
xlim(c(0, 4)) +
ylim(c(0, 4)) +
xlab("NEON VPD, min.") +
ylab("GridMet VPD, min")
# Using GridMet directly yields less impressive results
full_join(x = full_dataset_w_vpd %>%
select(site_id, year, mmwr_week, contains("_vpd")),
y = gridmet_vpd,
by = c("site_id", "year", "mmwr_week")) %>%
ggplot() +
geom_point(aes(x = min_air_vpd, y = min_vpd_gridmet)) +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(vars(site_id)) +
xlim(c(0, 4)) +
ylim(c(0, 4)) +
xlab("NEON VPD, min.") +
ylab("GridMet VPD, min")
# Merge the GirdMet-NEON VPD data with the existing dataset. But only use the
# new VPD data if there is no NEON-derived available
tick_neon_vpd_fill <- full_join(
x = full_dataset_w_vpd,
y = gridmet_vpd %>%
select(site_id, year, mmwr_week, min_vpd_mix, mean_vpd_mix, max_vpd_mix,
min_rh_gridmet, mean_rh_gridmet, max_rh_gridmet),
by = c("site_id", "year", "mmwr_week")) %>%
# Use the RIEM-sourced data when NEON is NA:
mutate(
# Record which source the temp data came from
rh_vpd_source = case_when(
# Condition: All NEON columns are NA ...AND...
(!is.finite(mean_air_vpd) & !is.finite(min_air_vpd) & !is.finite(max_air_vpd)) &
# ...none of the GridMet/mixed columns are NA
(is.finite(mean_vpd_mix) & is.finite(min_vpd_mix) & is.finite(max_vpd_mix)) ~ "GridMet/NEON",
# Condition: All of the NEON columns are NA ...AND...
(!is.finite(mean_air_vpd) & !is.finite(min_air_vpd) & !is.finite(max_air_vpd)) &
# ...all of the RIEM columns are NA as well
(!is.finite(mean_vpd_mix) & !is.finite(min_vpd_mix) & !is.finite(max_vpd_mix)) ~ "All sources NA",
# Condition: None of the NEON columns are NA
is.finite(mean_air_vpd) & is.finite(min_air_vpd) & is.finite(max_air_vpd) ~ "NEON",
# If one of the above options doesn't apply...
TRUE ~ "Unexpected values"),
mean_rh_pct = case_when(
# If NEON is NA, then use Gridmet
!is.finite(mean_rh_pct) ~ mean_rh_gridmet,
# In all other cases use NEON
TRUE ~ mean_rh_pct),
min_rh_pct = case_when(
!is.finite(min_rh_pct) ~ min_rh_gridmet,
TRUE ~ min_rh_pct),
max_rh_pct = case_when(
!is.finite(max_rh_pct) ~ max_rh_gridmet,
TRUE ~ max_rh_pct),
mean_air_vpd = case_when(
# If NEON is NA, then use Gridmet
!is.finite(mean_air_vpd) ~ mean_vpd_mix,
# In all other cases use NEON
TRUE ~ mean_air_vpd),
min_air_vpd = case_when(
!is.finite(min_air_vpd) ~ min_vpd_mix,
TRUE ~ min_air_vpd),
max_air_vpd = case_when(
!is.finite(max_air_vpd) ~ max_vpd_mix,
TRUE ~ max_air_vpd),
# Fill in missing dates based on their MMWR week
time = if_else(condition = is.na(time),
true = MMWRweek2Date(MMWRyear = year, MMWRweek = mmwr_week),
false = time),
day_num = if_else(condition = is.na(day_num),
true = yday(time),
false = day_num)) %>%
select(site_id, time, year, day_num, mmwr_week, amblyomma_americanum,
mean_temp, min_temp, max_temp, temp_source, contains("rh_pct"),
contains("precip"), contains("air_vpd"), rh_vpd_source)
# Export for external use
write_csv(x = tick_neon_vpd_fill,
file = "data/ticks_with_filled_weather.csv")
View(tick_neon_vpd_fill)
# What's RH coverage looking like?
ggplot(data = tick_neon_vpd_fill) +
geom_point(aes(x = time, y = mean_rh_pct), alpha = 0.45, color = "black",
fill = "gray20", shape = 21, size = 2) +
geom_point(data = tick_neon_vpd_fill %>%
filter(is.na(mean_rh_pct)),
aes(x = time, y = 0, color = "red", shape = 4),
alpha = 0.7) +
# scale_color_manual("NA data for RH", values = "red") +
scale_color_identity("", guide = "legend", breaks = "red", labels = "NA data for RH") +
scale_shape_identity("", guide = "legend", breaks = 4, labels = "NA data for RH") +
xlab("Date") +
ylab("RH, %") +
facet_wrap(vars(site_id), scales = "free", ncol = 2) +
theme_bw() +
theme(legend.position = "bottom",
axis.title = element_text(size = 12),
plot.title = element_text(size = 14, face = "bold")) +
ggtitle("Weekly RH data completion, NEON")
# What's precip coverage looking like?
ggplot(data = tick_neon_vpd_fill) +
geom_point(aes(x = time, y = sum_precip_mm ), alpha = 0.35, color = "black",
fill = "gray20", shape = 21, size = 2) +
geom_point(data = tick_neon_vpd_fill %>%
filter(is.na(sum_precip_mm)),
aes(x = time, y = 0, color = "red", shape = 4),
alpha = 0.4) +
scale_color_manual("NA data for RH", values = "red") +
scale_color_identity("", guide = "legend", breaks = "red", labels = "NA data for precip") +
scale_shape_identity("", guide = "legend", breaks = 4, labels = "NA data for precip") +
xlab("Date") +
ylab("Precip, mm") +
facet_wrap(vars(site_id), scales = "free", nrow = 2) +
theme_bw() +
theme(legend.position = "bottom",
axis.title = element_text(size = 12),
plot.title = element_text(size = 14, face = "bold")) +
ggtitle("Weekly precip data completion, NEON")
# What's RH coverage looking like?
ggplot(data = tick_neon_vpd_fill) +
geom_point(aes(x = time, y = mean_rh_pct), alpha = 0.45, color = "black",
fill = "gray20", shape = 21, size = 2) +
geom_point(data = tick_neon_vpd_fill %>%
filter(is.na(mean_rh_pct)),
aes(x = time, y = 0, color = "red", shape = 4),
alpha = 0.7) +
# scale_color_manual("NA data for RH", values = "red") +
scale_color_identity("", guide = "legend", breaks = "red", labels = "NA data for RH") +
scale_shape_identity("", guide = "legend", breaks = 4, labels = "NA data for RH") +
xlab("Date") +
ylab("RH, %") +
facet_wrap(vars(site_id), scales = "free", ncol = 2) +
theme_bw() +
theme(legend.position = "bottom",
axis.title = element_text(size = 12),
plot.title = element_text(size = 14, face = "bold")) +
ggtitle("Weekly RH data completion, NEON")
# What's RH coverage looking like?
ggplot(data = tick_neon_vpd_fill) +
geom_point(aes(x = time, y = mean_rh_pct), alpha = 0.45, color = "black",
fill = "gray20", shape = 21, size = 2) +
geom_point(data = tick_neon_vpd_fill %>%
filter(is.na(mean_rh_pct)),
aes(x = time, y = 0, color = "red", shape = 4),
alpha = 0.7) +
# scale_color_manual("NA data for RH", values = "red") +
scale_color_identity("", guide = "legend", breaks = "red", labels = "NA data for RH") +
scale_shape_identity("", guide = "legend", breaks = 4, labels = "NA data for RH") +
xlab("Date") +
ylab("RH, %") +
facet_wrap(vars(site_id), scales = "free", ncol = 2) +
theme_bw() +
theme(legend.position = "bottom",
axis.title = element_text(size = 12),
plot.title = element_text(size = 14, face = "bold")) +
ggtitle("Weekly mean RH data completion, NEON")
# What's RH coverage looking like?
ggplot(data = tick_neon_vpd_fill) +
geom_point(aes(x = time, y = mean_rh_pct), alpha = 0.45, color = "black",
fill = "gray20", shape = 21, size = 2) +
geom_point(data = tick_neon_vpd_fill %>%
filter(is.na(mean_rh_pct)),
aes(x = time, y = 0, color = "red", shape = 4),
alpha = 0.7) +
# scale_color_manual("NA data for RH", values = "red") +
scale_color_identity("", guide = "legend", breaks = "red", labels = "NA data for RH") +
scale_shape_identity("", guide = "legend", breaks = 4, labels = "NA data for RH") +
xlab("Date") +
ylab("RH, %") +
facet_wrap(vars(site_id), scales = "free", ncol = 2) +
theme_bw() +
theme(legend.position = "bottom",
axis.title = element_text(size = 12),
plot.title = element_text(size = 14, face = "bold")) +
ggtitle("Weekly mean RH data completion")
tick_neon_vpd_fill
ggplot(data = tick_neon_vpd_fill) +
geom_point(aes(x = time, y = mean_air_vpd ), alpha = 0.45, color = "black",
fill = "gray20", shape = 21, size = 2) +
geom_point(data = tick_neon_vpd_fill %>%
filter(is.na(mean_air_vpd)),
aes(x = time, y = 0, color = "red", shape = 4),
alpha = 0.7) +
# scale_color_manual("NA data for RH", values = "red") +
scale_color_identity("", guide = "legend", breaks = "red", labels = "NA data for VPD") +
scale_shape_identity("", guide = "legend", breaks = 4, labels = "NA data for VPD") +
xlab("Date") +
ylab("Vapor pressure deficit") +
facet_wrap(vars(site_id), scales = "free", ncol = 2) +
theme_bw() +
theme(legend.position = "bottom",
axis.title = element_text(size = 12),
plot.title = element_text(size = 14, face = "bold")) +
ggtitle("Weekly mean VPD data completion")
tick_neon_vpd_fill %>%
filter(is.na(mean_air_vpd)) %>%
View()
ggplot(data = tick_neon_vpd_fill) +
geom_point(aes(x = time, y = mean_air_vpd), alpha = 0.45, color = "black",
fill = "gray20", shape = 21, size = 2) +
geom_point(data = tick_neon_vpd_fill %>%
filter(is.na(mean_air_vpd)),
aes(x = time, y = 0, color = "red", shape = 4),
alpha = 0.7) +
# scale_color_manual("NA data for RH", values = "red") +
scale_color_identity("", guide = "legend", breaks = "red", labels = "NA data for VPD") +
scale_shape_identity("", guide = "legend", breaks = 4, labels = "NA data for VPD") +
xlab("Date") +
ylab("Vapor pressure deficit") +
facet_wrap(vars(site_id), scales = "free", ncol = 2) +
theme_bw() +
theme(legend.position = "bottom",
axis.title = element_text(size = 12),
plot.title = element_text(size = 14, face = "bold")) +
ggtitle("Weekly mean VPD data completion")
tick_neon_vpd_fill
# Make a table for easier summarizing
colSums(is.na(tick_neon_vpd_fill))
# Make a table for easier summarizing
colSums(is.na(tick_neon_vpd_fill)) %>%
tibble()
# Make a table for easier summarizing
colSums(is.na(tick_neon_vpd_fill)) %>%
as_tibble()
# Make a table for easier summarizing
colSums(is.na(tick_neon_vpd_fill)) %>%
as.data.frame()
# Make a table for easier summarizing
colSums(is.na(tick_neon_vpd_fill)) %>%
as.data.frame() %%>
rownames_to_column()
# Make a table for easier summarizing
colSums(is.na(tick_neon_vpd_fill)) %>%
as.data.frame() %>%
rownames_to_column()
# Make a table for easier summarizing
colSums(is.na(tick_neon_vpd_fill)) %>%
as.data.frame() %>%
rownames_to_column() %>%
rename(variable = 1, na_count = 2) %>%
mutate(pct_complete = 1-(na_count / nrow(tick_neon_vpd_fill)))
# Make a table for easier summarizing
colSums(is.na(tick_neon_vpd_fill)) %>%
as.data.frame() %>%
rownames_to_column() %>%
rename(variable = 1, na_count = 2) %>%
mutate(pct_complete = round(1 - (na_count / nrow(tick_neon_vpd_fill))),
digits = 2)
# Make a table for easier summarizing
colSums(is.na(tick_neon_vpd_fill)) %>%
as.data.frame() %>%
rownames_to_column() %>%
rename(variable = 1, na_count = 2) %>%
mutate(pct_complete = round(1 - (na_count / nrow(tick_neon_vpd_fill)),
digits = 2))
# Make a table for easier summarizing
colSums(is.na(tick_neon_vpd_fill)) %>%
as.data.frame() %>%
rownames_to_column() %>%
rename(variable = 1, na_count = 2) %>%
mutate(pct_complete = round(1 - (na_count / nrow(tick_neon_vpd_fill)),
digits = 2)) %>%
filter(!(variable %in% c("site_id", "time", "year", "day_num", "mmwr_week")))
# Weeks between samples
weeks_between <- tick_neon_vpd_fill %>%
filter(!is.na(amblyomma_americanum)) %>%
group_by(site_id) %>%
arrange(time) %>%
mutate(t_previous_sample = abs(as.numeric(time %--% lag(x = time, n = 1L), "weeks")))
weeks_between
# Make a table for easier summarizing
colSums(is.na(tick_neon_vpd_fill)) %>%
as.data.frame() %>%
rownames_to_column() %>%
rename(variable = 1, na_count = 2) %>%
mutate(pct_complete = round(1 - (na_count / nrow(tick_neon_vpd_fill)),
digits = 2)) %>%
filter(!(variable %in% c("site_id", "time", "year", "day_num", "mmwr_week")))
# Make a table for easier summarizing
colSums(is.na(tick_neon_vpd_fill)) %>%
as.data.frame() %>%
rownames_to_column() %>%
rename(variable = 1, na_count = 2) %>%
mutate(pct_complete = round(1 - (na_count / nrow(tick_neon_vpd_fill)),
digits = 2)) %>%
filter(!(variable %in% c("site_id", "time", "year", "day_num", "mmwr_week",
"temp_source", "rh_vpd_source")))
tick_neon_vpd_fill
# Make a table for easier summarizing
colSums(is.na(tick_neon_vpd_fill)) %>%
as.data.frame() %>%
rownames_to_column() %>%
rename(variable = 1, na_count = 2) %>%
mutate(pct_complete = round(1 - (na_count / nrow(tick_neon_vpd_fill)),
digits = 2)) %>%
filter(!(variable %in% c("site_id", "time", "year", "day_num", "mmwr_week",
"temp_source", "rh_vpd_source")))
# Make a table for easier summarizing
colSums(is.na(tick_neon_vpd_fill)) %>%
as.data.frame() %>%
rownames_to_column() %>%
rename(variable = 1, na_count = 2) %>%
mutate(pct_complete = round(1 - (na_count / nrow(tick_neon_vpd_fill)),
digits = 2)) %>%
filter(!(variable %in% c("site_id", "time", "year", "day_num", "mmwr_week",
"temp_source", "rh_vpd_source"))) %>%
write_csv(file = "test.csv")
tick_neon_vpd_fill %>%
filter(is.na(mean_air_vpd))
tick_neon_vpd_fill %>%
filter(is.na(mean_air_vpd)) %>%
View()
# Make a table for easier assessment
colSums(is.finite(tick_neon_vpd_fill)) %>%
as.data.frame() %>%
rownames_to_column() %>%
rename(variable = 1, na_count = 2) %>%
mutate(pct_complete = round(1 - (na_count / nrow(tick_neon_vpd_fill)),
digits = 2)) %>%
filter(!(variable %in% c("site_id", "time", "year", "day_num", "mmwr_week",
"temp_source", "rh_vpd_source")))
# Make a table for easier assessment
colSums(is.finite(tick_neon_vpd_fill)) %>%
as.data.frame() %>%
rownames_to_column() %>%
rename(variable = 1, na_count = 2) %>%
mutate(pct_complete = round(1 - (na_count / nrow(tick_neon_vpd_fill)),
digits = 2)) %>%
filter(!(variable %in% c("site_id", "time", "year", "day_num", "mmwr_week",
"temp_source", "rh_vpd_source")))
colSums(is.finite(tick_neon_vpd_fill))
tick_neon_vpd_fill
is.finite(tick_neon_vpd_fill)
is.na(tick_neon_vpd_fill)
tick_neon_vpd_fill %>%
summarize(across(everything(),
is.finite))
tick_neon_vpd_fill %>%
summarize(across(everything(),
is.finite),
tick_neon_vpd_fill %>%
summarize(across(everything(),
is.finite)) %>%
summarize(across(everything(),
sum))
tick_neon_vpd_fill %>%
summarize(across(everything(),
is.finite)) %>%
summarize(across(everything(),
~ sum(.) / nrow(tick_neon_vpd_fill)))
tick_neon_vpd_fill %>%
summarize(across(everything(),
is.finite)) %>%
summarize(across(everything(),
~ sum(.) / nrow(tick_neon_vpd_fill))) %>%
pivot_longer(names_to = "variable", values_to = prop_na)
tick_neon_vpd_fill %>%
summarize(across(everything(),
is.finite)) %>%
summarize(across(everything(),
~ sum(.) / nrow(tick_neon_vpd_fill))) %>%
pivot_longer(names_to = "variable", values_to = prop_na, everything())
tick_neon_vpd_fill %>%
summarize(across(everything(),
is.finite)) %>%
summarize(across(everything(),
~ sum(.) / nrow(tick_neon_vpd_fill))) %>%
pivot_longer(names_to = "variable", values_to = "prop_na", everything())
# Make a table for easier assessment
tick_neon_vpd_fill %>%
summarize(across(everything(),
is.finite)) %>%
summarize(across(everything(),
~ sum(.) / nrow(tick_neon_vpd_fill))) %>%
pivot_longer(names_to = "variable", values_to = "pct_complete", everything()) %>%
filter(!(variable %in% c("site_id", "time", "year", "day_num", "mmwr_week",
"temp_source", "rh_vpd_source")))
# Make a table for easier assessment
tick_neon_vpd_fill %>%
summarize(across(everything(),
is.finite)) %>%
summarize(across(everything(),
~ sum(.) / nrow(tick_neon_vpd_fill))) %>%
pivot_longer(names_to = "variable", values_to = "pct_complete", everything()) %>%
filter(!(variable %in% c("site_id", "time", "year", "day_num", "mmwr_week",
"temp_source", "rh_vpd_source", "precip_type")))
# Make a table for easier assessment
tick_neon_vpd_fill %>%
summarize(across(everything(),
is.finite)) %>%
summarize(across(everything(),
~ sum(.) / nrow(tick_neon_vpd_fill))) %>%
pivot_longer(names_to = "variable", values_to = "pct_complete", everything()) %>%
filter(!(variable %in% c("site_id", "time", "year", "day_num", "mmwr_week",
"temp_source", "rh_vpd_source", "precip_type"))) %>%
arrange(pct_complete)
# Make a table for easier assessment
tick_neon_vpd_fill %>%
summarize(across(everything(),
is.finite)) %>%
summarize(across(everything(),
~ sum(.) / nrow(tick_neon_vpd_fill))) %>%
pivot_longer(names_to = "variable", values_to = "pct_complete", everything()) %>%
filter(!(variable %in% c("site_id", "time", "year", "day_num", "mmwr_week",
"temp_source", "rh_vpd_source", "precip_type"))) %>%
arrange(pct_complete) %>%
write_csv(file = "data/na_counts_by_col.csv")
# Make a table for easier assessment
tick_neon_vpd_fill %>%
summarize(across(everything(),
is.finite)) %>%
summarize(across(everything(),
~ round(sum(.) / nrow(tick_neon_vpd_fill),
digits = 2))) %>%
pivot_longer(names_to = "variable", values_to = "pct_complete", everything()) %>%
filter(!(variable %in% c("site_id", "time", "year", "day_num", "mmwr_week",
"temp_source", "rh_vpd_source", "precip_type"))) %>%
arrange(pct_complete) %>%
write_csv(file = "data/na_counts_by_col.csv")
# Anything weird happening with these different sources?
ggplot(data = tick_neon_riem_clean %>%
filter(temp_source %in% c("NEON", "RIEM"))) +
geom_point(aes(x = time, y = mean_temp, fill = temp_source),
color = "black", alpha = 0.45, shape = 21, size = 2) +
geom_point(data = tick_neon_riem_clean %>%
filter(temp_source == "All temp. sources NA"),
aes(x = time, y = 0, size = ""), color = "red",
shape = 4) +
scale_fill_viridis_d("Temperature Source") +
scale_size_discrete("All temp. sources NA") +
xlab("Date") +
ylab("Mean temperature, C") +
facet_wrap(vars(site_id), scales = "free", ncol = 2) +
theme_bw() +
theme(legend.position = "bottom",
axis.title = element_text(size = 12),
plot.title = element_text(size = 14, face = "bold")) +
ggtitle("Weekly temperature data completion by provider")
unique(tick_neon_vpd_fill$rh_vpd_source)
ggplot(data = tick_neon_vpd_fill %>%
filter(rh_vpd_source %in% c("NEON", "GridMet/NEON"))) +
geom_point(aes(x = time, y = mean_air_vpd, fill = rh_vpd_source),
color = "black", alpha = 0.45, shape = 21, size = 2) +
geom_point(data = tick_neon_vpd_fill %>%
filter(rh_vpd_source == "All temp. sources NA"),
aes(x = time, y = 0, size = ""), color = "red",
shape = 4) +
scale_fill_viridis_d("VPD Source") +
scale_size_discrete("All VPD sources NA") +
xlab("Date") +
ylab("Mean VPD") +
facet_wrap(vars(site_id), scales = "free", ncol = 2) +
theme_bw() +
theme(legend.position = "bottom",
axis.title = element_text(size = 12),
plot.title = element_text(size = 14, face = "bold")) +
ggtitle("Weekly VPD data completion by provider")
ggplot(data = tick_neon_vpd_fill %>%
filter(rh_vpd_source %in% c("NEON", "GridMet/NEON")))
ggplot(data = tick_neon_vpd_fill %>%
filter(rh_vpd_source %in% c("NEON", "GridMet/NEON"))) +
geom_point(aes(x = time, y = mean_air_vpd, fill = rh_vpd_source),
color = "black", alpha = 0.45, shape = 21, size = 2)
ggplot(data = tick_neon_vpd_fill %>%
filter(rh_vpd_source %in% c("NEON", "GridMet/NEON"))) +
geom_point(aes(x = time, y = mean_air_vpd, fill = rh_vpd_source),
color = "black", alpha = 0.45, shape = 21, size = 2) +
geom_point(data = tick_neon_vpd_fill %>%
filter(rh_vpd_source == "All temp. sources NA"),
aes(x = time, y = 0, size = ""), color = "red",
shape = 4)
ggplot(data = tick_neon_vpd_fill %>%
filter(rh_vpd_source %in% c("NEON", "GridMet/NEON"))) +
geom_point(aes(x = time, y = mean_air_vpd, fill = rh_vpd_source),
color = "black", alpha = 0.45, shape = 21, size = 2) +
geom_point(data = tick_neon_vpd_fill %>%
filter(rh_vpd_source == "All sources NA"),
aes(x = time, y = 0, size = ""), color = "red",
shape = 4) +
scale_fill_viridis_d("VPD Source") +
scale_size_discrete("All VPD sources NA") +
xlab("Date") +
ylab("Mean VPD") +
facet_wrap(vars(site_id), scales = "free", ncol = 2) +
theme_bw() +
theme(legend.position = "bottom",
axis.title = element_text(size = 12),
plot.title = element_text(size = 14, face = "bold")) +
ggtitle("Weekly VPD data completion by raw data source")
ggplot(data = tick_neon_vpd_fill %>%
filter(rh_vpd_source %in% c("NEON", "GridMet/NEON"))) +
geom_point(aes(x = time, y = mean_air_vpd, fill = rh_vpd_source),
color = "black", alpha = 0.45, shape = 21, size = 2) +
geom_point(data = tick_neon_vpd_fill %>%
filter(rh_vpd_source == "All sources NA"),
aes(x = time, y = 0, size = ""), color = "red",
shape = 4) +
scale_fill_viridis_d("VPD Source") +
scale_size_discrete("All VPD sources NA") +
xlab("Date") +
ylab("Mean VPD") +
facet_wrap(vars(site_id), scales = "free", nrow  = 2) +
theme_bw() +
theme(legend.position = "bottom",
axis.title = element_text(size = 12),
plot.title = element_text(size = 14, face = "bold")) +
ggtitle("Weekly VPD data completion by raw data source")
6.95/2.99
1889/2.32
1350/2.32
